import i18n from "@nodesecure/i18n";
import * as vuln from "@nodesecure/vuln";
import { generateCIConfiguration, CiConfiguration, CiWarnings } from "./projects/ci.js";
import { generateReportConfiguration, ReportConfiguration, ReportChart } from "./projects/report.js";
export declare const JSONSchema: any;
export interface RC {
    /** version of the rc package used to generate the nodesecurerc file */
    version: string;
    /**
     * Language to use for i18n (translation in NodeSecure tools).
     * @see https://developer.mozilla.org/en-US/docs/Glossary/I18N
     * @see https://github.com/NodeSecure/i18n
     *
     * @default `english`
     */
    i18n?: i18n.languages;
    /**
     * Vulnerability strategy to use. Can be disabled by using `none` as value.
     * @see https://github.com/NodeSecure/vuln#available-strategy
     *
     * @default `npm`
     */
    strategy?: vuln.Strategy.Kind;
    /** NodeSecure ci Object configuration */
    ci?: CiConfiguration;
    /** NodeSecure report Object configuration */
    report?: ReportConfiguration;
}
export declare type RCGenerationMode = "minimal" | "ci" | "report" | "complete";
/**
 * @example
 * generateDefaultRC("complete");
 * generateDefaultRC(["ci", "report"]); // minimal + ci + report
 */
export declare function generateDefaultRC(mode?: RCGenerationMode | RCGenerationMode[]): RC;
/**
 * Dedicated directory for NodeSecure to store the configuration in the os HOME directory.
 */
export declare function homedir(): string;
export { generateCIConfiguration, CiConfiguration, CiWarnings, generateReportConfiguration, ReportConfiguration, ReportChart };
