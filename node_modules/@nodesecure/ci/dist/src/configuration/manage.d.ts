import { ApiConfig, CliConfig } from "./external/index.js";
import { Nsci } from "./standard/index.js";
export declare type SelectedRuntimeConfig = {
    configMode: "raw" | "file";
    runtimeConfig: Nsci.Configuration;
};
/**
 * Given that the user can potentially provide two runtime settings at the same time
 * (cli options + .nodesecurerc) or (api options + .nodesecurerc) we must be sure
 * to manage a priority rule where one configuration is chosen in favor of another one.
 *
 * For now, it was decided that .nodesecurerc will take priority over any others
 * settings (api & cli). Consequently if we find a NodeSecure config
 * (i.e: nodesecurerc file), we short circuit the selection and simply return the
 * standardized NodeSecure config.
 */
export declare function selectRuntimeConfig(options: ApiConfig | CliConfig): Promise<SelectedRuntimeConfig>;
export declare function useRuntimeConfig(options: ApiConfig | CliConfig): Promise<Nsci.Configuration>;
