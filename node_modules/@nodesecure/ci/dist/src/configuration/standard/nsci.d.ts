import * as jsxray from "@nodesecure/js-x-ray";
import { ValueOf } from "../../types";
import { IgnorePatterns } from "../external/nodesecure/ignore-file.js";
export declare const vulnStrategy: {
    readonly npm: "NPM_AUDIT";
    readonly node: "SECURITY_WG";
    readonly snyk: "SNYK";
    readonly sonatype: "SONATYPE";
    readonly none: "NONE";
};
export declare type InputStrategy = keyof typeof vulnStrategy;
export declare type OutputStrategy = ValueOf<typeof vulnStrategy>;
export declare const vulnSeverity: {
    readonly MEDIUM: "medium";
    readonly HIGH: "high";
    readonly CRITICAL: "critical";
    readonly ALL: "all";
};
export declare type Severity = ValueOf<typeof vulnSeverity>;
export declare const warnings: {
    readonly ERROR: "error";
    readonly OFF: "off";
    readonly WARNING: "warning";
};
export declare const warningNames: jsxray.WarningName[];
export declare type WarningMode = ValueOf<typeof warnings>;
export declare type WarningName = keyof typeof jsxray.warnings;
export declare type Warnings = WarningMode | Record<jsxray.WarningName, WarningMode>;
export declare const reporterTarget: {
    readonly CONSOLE: "console";
    readonly HTML: "html";
};
export declare type ReporterTarget = ValueOf<typeof reporterTarget>;
export declare type Configuration = {
    rootDir: string;
    strategy: ValueOf<typeof vulnStrategy>;
    reporters: ReporterTarget[];
    vulnerabilitySeverity: ValueOf<typeof vulnSeverity>;
    warnings: Warnings;
    ignorePatterns: IgnorePatterns;
};
export declare const defaultNsciRuntimeConfiguration: Configuration;
