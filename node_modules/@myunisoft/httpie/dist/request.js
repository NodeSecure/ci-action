"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.patch = exports.del = exports.put = exports.post = exports.get = exports.request = void 0;
const url_1 = require("url");
// Import Third-party Dependencies
const undici = __importStar(require("undici"));
const statuses_1 = __importDefault(require("statuses"));
// Import Internal Dependencies
const Utils = __importStar(require("./utils"));
const agents_1 = require("./agents");
/**
 * @description httpie "like" request wrapper that use new Node.js http client undici under the hood.
 * @see https://github.com/nodejs/undici
 *
 * @example
 * const { statusCode, data } = await request("GET", "https://ws-dev.myunisoft.fr/ws_monitoring");
 * console.log(statusCode, data); // 200 "true"
 */
async function request(method, uri, options = {}) {
    var _a, _b, _c, _d;
    const { maxRedirections = 0 } = options;
    const computedURI = (0, agents_1.computeURI)(uri);
    if (typeof options.querystring !== "undefined") {
        const qs = typeof options.querystring === "string" ? new url_1.URLSearchParams(options.querystring) : options.querystring;
        for (const [key, value] of qs.entries()) {
            computedURI.url.searchParams.set(key, value);
        }
    }
    const limit = (_b = (_a = options.limit) !== null && _a !== void 0 ? _a : computedURI.limit) !== null && _b !== void 0 ? _b : null;
    const dispatcher = (_d = (_c = options.agent) !== null && _c !== void 0 ? _c : computedURI.agent) !== null && _d !== void 0 ? _d : void 0;
    const headers = Utils.createHeaders({ headers: options.headers, authorization: options.authorization });
    const body = Utils.createBody(options.body, headers);
    const requestOptions = { method, headers, body, dispatcher, maxRedirections };
    const requestResponse = limit === null ?
        await undici.request(computedURI.url, requestOptions) :
        await limit(() => undici.request(computedURI.url, requestOptions));
    const statusCode = requestResponse.statusCode;
    const RequestResponse = {
        headers: requestResponse.headers,
        statusMessage: statuses_1.default.message[requestResponse.statusCode],
        statusCode,
        data: void 0
    };
    const data = await Utils.parseUndiciResponse(requestResponse);
    RequestResponse.data = data;
    if (statusCode >= 400) {
        throw Utils.toError(RequestResponse);
    }
    return RequestResponse;
}
exports.request = request;
exports.get = request.bind(null, "GET");
exports.post = request.bind(null, "POST");
exports.put = request.bind(null, "PUT");
exports.del = request.bind(null, "DELETE");
exports.patch = request.bind(null, "PATCH");
//# sourceMappingURL=request.js.map