// Import Third-party dependencies
import kleur from "kleur";
function createConsoleMessage(message) {
    return {
        message,
        bold() {
            this.message = consolePrinter.decoration.bold(this.message);
            return this;
        },
        italic() {
            this.message = consolePrinter.decoration.italic(this.message);
            return this;
        },
        underline() {
            this.message = consolePrinter.decoration.underline(this.message);
            return this;
        },
        prefix(msg) {
            this.message = `${msg} ${this.message}`;
            return this;
        },
        suffix(msg) {
            this.message = `${this.message} ${msg}`;
            return this;
        },
        print() {
            console.log(`${this.message}`);
        },
        printWithEmptyLine() {
            console.log(`\n ${this.message}`);
        }
    };
}
export const consolePrinter = {
    font: {
        standard: (message) => createConsoleMessage(kleur.white(message)),
        highlight: (message) => createConsoleMessage(kleur.magenta(message)),
        info: (message) => createConsoleMessage(kleur.yellow(message)),
        error: (message) => createConsoleMessage(kleur.red(message)),
        success: (message) => createConsoleMessage(kleur.green(message)),
        highlightedSuccess: (message) => createConsoleMessage(kleur.bgGreen().bold().white(message)),
        highlightedError: (message) => createConsoleMessage(kleur.bgRed().bold().white(message))
    },
    decoration: {
        underline: (message) => kleur.underline(message),
        italic: (message) => kleur.italic(message),
        bold: (message) => kleur.bold(message)
    },
    util: {
        concatOutputs: (messages, delimiter = " ") => createConsoleMessage(messages.join(delimiter)),
        emptyLine: () => console.log()
    }
};
export function removeWhiteSpaces(msg) {
    return msg.replace(/\s\s+/g, " ");
}
//# sourceMappingURL=index.js.map