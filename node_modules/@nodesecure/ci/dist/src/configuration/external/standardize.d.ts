import { RC as NodeSecureRuntimeConfig } from "@nodesecure/rc";
import { IgnorePatterns } from "../../configuration/external/nodesecure/ignore-file.js";
import { Nsci } from "../standard/index.js";
import { ApiConfig } from "./api/index.js";
import { CliConfig } from "./cli/index.js";
import { ExternalRuntimeConfiguration } from "./common.js";
export declare function standardizeExternalConfiguration(externalConfig: ExternalRuntimeConfiguration): Nsci.Configuration;
/**
 * For now, ApiConfig and CliConfig use the same config interface but its
 * a coincidence so we must be sure to create two types and two adapters if they
 * even diverge.
 * On the other hand NodeSecure config is different by nature and has its own
 * adapter.
 */
export declare function standardizeAllApisOptions(options: ApiConfig | CliConfig | NodeSecureRuntimeConfig): ExternalRuntimeConfiguration;
export declare function standardizeRuntimeConfig(options: ApiConfig | CliConfig | NodeSecureRuntimeConfig, ignorePatterns: IgnorePatterns): Promise<Nsci.Configuration>;
