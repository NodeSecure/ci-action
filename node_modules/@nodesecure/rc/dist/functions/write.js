// Import Node.js Dependencies
import path from "path";
// Import Third-party Dependencies
import Config from "@slimio/config";
import TR from "ts-results";
// Import Internal Dependencies
import { JSONSchema } from "../rc.js";
import * as CONSTANTS from "../constants.js";
// CONSTANTS
const { Ok, Err } = TR;
export async function write(location = process.cwd(), options) {
    try {
        const { payload, partialUpdate = false } = options;
        const cfgPath = path.join(location, CONSTANTS.CONFIGURATION_NAME);
        const cfg = new Config(cfgPath, {
            defaultSchema: JSONSchema
        });
        await cfg.read();
        const newPayloadValue = partialUpdate ? Object.assign(cfg.payload, payload) : payload;
        cfg.payload = newPayloadValue;
        await cfg.close();
        return new Ok(void 0);
    }
    catch (error) {
        return new Err(error);
    }
}
//# sourceMappingURL=write.js.map