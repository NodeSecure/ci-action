export declare type ValueOf<T> = T[keyof T];
export declare type DeepPartialRecord<T> = {
    [P in keyof T]?: T[P] extends Record<string, unknown> ? DeepPartialRecord<T[P]> : Partial<T[P]>;
};
export declare type Warning = Omit<JSXRay.BaseWarning, "value">;
export declare type Warnings = Warning[];
/**
 * These types are used to enhance @nodesecure type definitions.
 * In the near feature, these types will be directly colocalized with packages.
 */
export declare type DependencyWarning = {
    package: string;
    warnings: Warnings;
};
export declare type Maybe<T> = T | undefined;
