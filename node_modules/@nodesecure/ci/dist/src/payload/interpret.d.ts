import { Scanner } from "@nodesecure/scanner";
import * as RC from "../nodesecurerc.js";
import { pipeline } from "../pipeline/index.js";
import { CompactedScannerPayload } from "./extract.js";
export declare type InterpretedPayload = {
    status: pipeline.Status;
    data: CompactedScannerPayload;
};
/**
 * This interpreter accumulates each Check Function output in order to determine
 * a global pipeline status and at the same time compact the original payload to
 * simplify the reporting step.
 * In other words "status" is used to decide if the pipeline should fail or pass,
 * whereas the data is compacted in order to be easily reported by any type of
 * reporter (HTML, Console, etc).
 */
export declare function runPayloadInterpreter(payload: Scanner.Payload, rc: RC.Configuration): InterpretedPayload;
