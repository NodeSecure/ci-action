import Validator from "ajv";
export class IgnorePatterns {
    constructor(warnings = {}) {
        this.warnings = new IgnoreWarningsPatterns(warnings);
    }
    static default() {
        return new IgnorePatterns();
    }
}
export class IgnoreWarningsPatterns {
    constructor(entries = {}) {
        this.entries = entries;
    }
    has(warning, pkg) {
        return Boolean(this.entries[warning]?.includes(pkg));
    }
}
const kIgnoreFileSchema = {
    type: "object",
    properties: {
        warnings: {
            type: "object",
            patternProperties: {
                "^[0-9]{2,6}$": {
                    type: "array",
                    items: {
                        type: "string"
                    }
                }
            }
        }
    },
    additionalProperties: false
};
export const kIgnoreFileName = ".nodesecureignore";
export function validateIgnoreFile(ignoreFile) {
    const validator = new Validator();
    const validate = validator.compile(kIgnoreFileSchema);
    const isValid = validate(ignoreFile);
    return {
        isValid,
        error: validate.errors ? validate?.errors[0]?.message : undefined
    };
}
//# sourceMappingURL=ignore-file.js.map